Sukurti kambario nuomos formą.
	browser vaizdas:
		form
			Vardas Pavardė (input text)
			Telefonas (input tel)
			Elektroninis Paštas (input email)
			KambarioTipas (realiau būtų radio tipas, bet darome su select)
				standartinis
				prabangus

			ŽmoniųKiekis (input nr)
			ĮsiregistravimoDataIrLaikas (input datetime-local)
			IšsiregistravimoDataIrLaikas (input datetime-local)
			submitButton
	react'o medžio vaizdas:
		App
			Form
				InputField key="nameSurname"
				InputField key="phone"
				InputField key="email"
				SelectField key="roomType"

				InputField key="peopleAmount"
				InputField key="checkIn"
				InputField key="checkOut"

React projekto veikimas:
	1) index.jsx kviečia App komponentą.
	2) App.jsx kviečia Form komponentą ir per props perduoda jam visą reikalingą informaciją.
	3.1) Form.jsx priima props konstruktoriaus viduje nurodydamas jų reikšmes this.state'ui, kuris jas destruktūrizuoja.
	3.2) Form.jsx susitvarko su: laukų informacijos pasikeitimu; laukų informacijos tinkamumu; formos pateikimu.
	3.3) Form.jsx kviečia InputField arba/ir SelectField komponentą/us priklausomai nuo to, kokius ir kiek props priima ir perduoda jiems reikalingą informaciją.
	4) InputField.jsx ir SelectField.jsx priima props, juos destruktūrizuoja ir su jais sukuria bei return'ina norimą formos lauką.
	4(po optimizacijos)) InputField.jsx ir SelectField.jsx priima props, juos destruktūrizuoja ir kviečia Field komponentą jam perduodami reikalingą informaciją.
	5(po optimizacijos)) Field.jsx priima props, juos destruktūrizuoja ir su jais sukuria bei return'ina norimą formos lauką.

Projekto darymo eiga:
	1) Išanalizuokite pateiktą pavyzdį.
	2) Prisidėkite validation sukurtiems laukams.
	3) Ekrane atspausdinkite validation error'ų žinutes (jeigu būna validation error)
	4) Papildykite formą trūkstamais laukais.
	5) Optimizuokite kodą taip, kaip optimizavote teorinės dalies metu.
	6) Stilizuokite.